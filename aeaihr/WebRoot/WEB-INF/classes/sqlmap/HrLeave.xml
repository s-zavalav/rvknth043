<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="HrLeave">  
  <select id="findRecords" parameterClass="com.agileai.domain.DataParam" resultClass="com.agileai.domain.DataRow">
	select a.LEA_ID,a.USER_ID,b.USER_NAME as USER_ID_NAME,a.LEA_DATE,a.LEA_TYPE,a.LEA_CAUSE,a.LEA_APPOVER,c.USER_NAME as LEA_APPOVER_NAME,a.LEA_APP_TIME,a.LEA_APP_OPINION,a.APP_RESULT,a.LEA_SDATE,a.LEA_EDATE,a.LEA_DAYS,STATE
from hr_leave a join security_user b on a.USER_ID = b.USER_ID left join security_user c on a.LEA_APPOVER = c.USER_ID
where 1=1
<isNotEmpty prepend=" " property="sdate">
and LEA_SDATE &gt;= #sdate#
</isNotEmpty>
<isNotEmpty prepend=" " property="edate">
and LEA_SDATE &lt;= #edate#
</isNotEmpty>
<isNotEmpty prepend=" " property="currentUserId">
and b.USER_ID = #currentUserId#
</isNotEmpty>
<isNotEmpty prepend=" " property="STATE">
and STATE = #STATE#
</isNotEmpty>
<isNotEmpty prepend=" " property="user_Name">
and b.USER_NAME = #user_Name#
</isNotEmpty>
order by LEA_SDATE,b.USER_CODE
  </select>
  <select id="getRecord" parameterClass="com.agileai.domain.DataParam" resultClass="com.agileai.domain.DataRow">
    select a.LEA_ID,a.USER_ID,b.USER_NAME as USER_ID_NAME,a.LEA_DATE,a.LEA_TYPE,a.LEA_CAUSE,a.LEA_APPOVER,c.USER_NAME as LEA_APPOVER_NAME,a.LEA_APP_TIME,a.LEA_APP_OPINION,a.APP_RESULT,a.LEA_SDATE,a.LEA_EDATE,a.LEA_DAYS,STATE
from hr_leave a join security_user b on a.USER_ID = b.USER_ID left join security_user c on a.LEA_APPOVER = c.USER_ID
where 1=1 
<isNotEmpty prepend="and " property="LEA_ID">
LEA_ID=#LEA_ID#
</isNotEmpty>
<isNotEmpty prepend=" " property="USER_CODE">
and b.USER_ID = #USER_CODE#
</isNotEmpty>
<isNotEmpty prepend="and " property="leaDate">
LEA_DATE=#leaDate#
</isNotEmpty>
  </select>
   <select id="getNowRecord" parameterClass="com.agileai.domain.DataParam" resultClass="com.agileai.domain.DataRow">
    select a.LEA_ID,a.USER_ID,b.USER_NAME as USER_ID_NAME,a.LEA_DATE,a.LEA_TYPE,a.LEA_CAUSE,a.LEA_APPOVER,c.USER_NAME as LEA_APPOVER_NAME,a.LEA_APP_TIME,a.LEA_APP_OPINION,a.APP_RESULT,a.LEA_SDATE,a.LEA_EDATE,a.LEA_DAYS,STATE
from hr_leave a join security_user b on a.USER_ID = b.USER_ID left join security_user c on a.LEA_APPOVER = c.USER_ID
where 1=1 
<isNotEmpty prepend="and " property="leaDate">
LEA_DATE=#leaDate#
</isNotEmpty>
<isNotEmpty prepend="and " property="currentUser">
b.USER_ID=#currentUser#
</isNotEmpty>
<isNotEmpty prepend="and " property="LEA_ID">
LEA_ID=#LEA_ID#
</isNotEmpty>
  </select>
  <insert id="insertRecord" parameterClass="com.agileai.domain.DataParam">
    insert into hr_leave (LEA_ID,USER_ID,LEA_DATE,LEA_TYPE,LEA_SDATE,LEA_EDATE,LEA_DAYS,LEA_CAUSE,STATE) 
    values (#LEA_ID:CHAR#,#USER_ID:CHAR#,#LEA_DATE:VARCHAR#,#LEA_TYPE:VARCHAR#,#LEA_SDATE:TIMESTAMP#,#LEA_EDATE:TIMESTAMP#,#LEA_DAYS:VARCHAR#,#LEA_CAUSE:VARCHAR#,"drafe")
  </insert>
  <update id="updateRecord" parameterClass="com.agileai.domain.DataParam">
    update hr_leave
set USER_ID=#USER_ID:CHAR#,LEA_DATE=#LEA_DATE:VARCHAR#,LEA_TYPE=#LEA_TYPE:VARCHAR#,LEA_SDATE=#LEA_SDATE:TIMESTAMP#,LEA_EDATE=#LEA_EDATE:TIMESTAMP#,LEA_DAYS=#LEA_DAYS:VARCHAR#,LEA_CAUSE=#LEA_CAUSE:VARCHAR#,STATE=#STATE:VARCHAR#
where LEA_ID=#LEA_ID#
  </update>
  <update id="approveRecord" parameterClass="com.agileai.domain.DataParam">
    update hr_leave
set LEA_APPOVER=#LEA_APPOVER:VARCHAR#,LEA_APP_TIME=#LEA_APP_TIME:TIMESTAMP#,APP_RESULT=#APP_RESULT:VARCHAR#,LEA_APP_OPINION=#LEA_APP_OPINION:VARCHAR#,STATE=#STATE:VARCHAR#
where LEA_ID=#LEA_ID#
  </update>
    <delete id="deleteRecord" parameterClass="com.agileai.domain.DataParam">
    delete from hr_leave where LEA_ID=#LEA_ID#
  </delete>  
</sqlMap>