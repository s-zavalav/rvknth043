<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="HrSalary">
	<select id="findRecords" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select a.SAL_ID,a.SAL_USER,c.EMP_NAME as
		SAL_NAME,a.SAL_YEAR,a.SAL_MONTH,a.SAL_VALID_DAYS,a.SAL_WORK_DAYS,
		a.SAL_OVERTIME,a.SAL_LEAVE,a.SAL_BASIC,a.SAL_PERFORMANCE,
		a.SAL_SUBSIDY,a.SAL_BONUS,a.SAL_TOTAL,a.SAL_STATE,a.SAL_INSURE,a.SAL_TAX,SAL_REMARKS,
		a.SAL_ACTUAL,a.SAL_YEAR_LEAVE,a.SAL_SHOULD,a.SAL_HOUSING_FUND
		from hr_salary a LEFT
		JOIN security_user b ON a.SAL_USER=b.USER_ID LEFT
		JOIN hr_employee c ON
		b.USER_CODE=c.EMP_CODE
		where 1=1
		<isNotEmpty prepend=" " property="salYear">
			and SAL_YEAR = #salYear#
		</isNotEmpty>
		<isNotEmpty prepend=" " property="salMonth">
			and SAL_MONTH = #salMonth#
		</isNotEmpty>
		<isNotEmpty prepend=" " property="salState">
			and SAL_STATE = #salState#
		</isNotEmpty>
		<isNotEmpty prepend=" " property="currentUserCode">
			and a.SAL_USER =
			#currentUserCode#
		</isNotEmpty>
		order by b.USER_CODE,SAL_YEAR desc,SAL_MONTH desc
	</select>
	<select id="getRecord" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select a.SAL_ID,a.SAL_USER,c.EMP_NAME as
		SAL_NAME,a.SAL_YEAR,a.SAL_MONTH,a.SAL_VALID_DAYS,a.SAL_WORK_DAYS,
		a.SAL_OVERTIME,a.SAL_LEAVE,a.SAL_BASIC,a.SAL_PERFORMANCE,
		a.SAL_SUBSIDY,a.SAL_BONUS,a.SAL_TOTAL,a.SAL_STATE,a.SAL_INSURE,a.SAL_TAX,SAL_REMARKS,
		a.SAL_ACTUAL,SAL_OFFSET_VACATION,a.SAL_YEAR_LEAVE,a.SAL_SHOULD,a.SAL_HOUSING_FUND,
		round(a.SAL_TOTAL/a.SAL_VALID_DAYS,2) as SAL_DAY_MONEY
		from hr_salary a LEFT
		JOIN security_user b ON a.SAL_USER=b.USER_ID LEFT
		JOIN hr_employee c ON
		b.USER_CODE=c.EMP_CODE
		where 1=1
		<isNotEmpty prepend="and " property="SAL_ID">
			SAL_ID=#SAL_ID#
		</isNotEmpty>
	</select>
	<select id="findMasterDaysRecords" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select
		a.EMP_ID,EMP_CODE,EMP_NAME,EMP_SEX,EMP_BIRTHDAY,EMP_NATIONAL,EMP_PARTY,EMP_ID_NUMBER,
		EMP_TEL,EMP_NATIVE_PLACE,EMP_MARITAL_STATUS,EMP_ANNUAL_LEAVE_DAYS,
		EMP_REFERENCE_TIME,EMP_NOW_DEPT,EMP_NOW_JOB,EMP_INDUCTION_TIME,EMP_EMAIL,
		EMP_REGULAR_TIME,EMP_EDUCATION,EMP_BASIC,c.USER_ID,
		EMP_PERFORMANCE,EMP_SUBSIDY,EMP_INSURE,EMP_TAX,EMP_DIMISSION_TIME,EMP_WORK_STATE,
		EMP_HOUSING_FUND,EMP_PAY_INSURE
		from hr_employee a LEFT JOIN security_user c ON a.EMP_CODE = c.USER_CODE
		where 1=1 
		and EMP_PARTICIPATE_SALARY = 'Y'
		and c.USER_ID not in (select
		b.SAL_USER from
		hr_salary b
		where 1=1
		and b.SAL_YEAR = #year#
		and b.SAL_MONTH = #month#
		and b.SAL_STATE = '1')
	</select>
	<select id="retrieveValidDays" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select VALID_YEAR,VALID_MONTH,VALID_DAYS
		from hr_valid
		where 1=1
		<isNotEmpty prepend="and " property="year">
			VALID_YEAR=#year#
		</isNotEmpty>
		<isNotEmpty prepend="and " property="month">
			VALID_MONTH=#month#
		</isNotEmpty>
	</select>
	<insert id="insertRecord" parameterClass="com.agileai.domain.DataParam">
		insert into hr_salary
		(SAL_ID,SAL_USER,SAL_YEAR,SAL_MONTH,SAL_VALID_DAYS,SAL_WORK_DAYS,SAL_OVERTIME,SAL_LEAVE,SAL_BASIC,SAL_PERFORMANCE,SAL_SUBSIDY,SAL_BONUS,SAL_ACTUAL,SAL_TOTAL,SAL_STATE,SAL_INSURE,SAL_TAX,SAL_REMARKS,SAL_OFFSET_VACATION,SAL_YEAR_LEAVE,SAL_SHOULD,SAL_HOUSING_FUND)
		values
		(#SAL_ID:CHAR#,#SAL_USER:VARCHAR#,#SAL_YEAR:VARCHAR#,#SAL_MONTH:VARCHAR#,#SAL_VALID_DAYS:DECIMAL#,#SAL_WORK_DAYS:DECIMAL#,#SAL_OVERTIME:DECIMAL#,#SAL_LEAVE:DECIMAL#,#SAL_BASIC:DECIMAL#,#SAL_PERFORMANCE:DECIMAL#,#SAL_SUBSIDY:DECIMAL#,#SAL_BONUS:DECIMAL#,#SAL_ACTUAL:DECIMAL#,#SAL_TOTAL:DECIMAL#,#SAL_STATE:VARCHAR#,#SAL_INSURE:DECIMAL#,#SAL_TAX:DECIMAL#,#SAL_REMARKS:VARCHAR#,#SAL_OFFSET_VACATION:DECIMAL#,#SAL_YEAR_LEAVE:DECIMAL#,#SAL_YEAR_LEAVE:DECIMAL#,#SAL_SHOULD:DECIMAL#,#SAL_HOUSING_FUND:DECIMAL#)
	</insert>
	<update id="updateRecord" parameterClass="com.agileai.domain.DataParam">
		update hr_salary
		set
		SAL_USER=#SAL_USER:VARCHAR#,SAL_YEAR=#SAL_YEAR:VARCHAR#,SAL_MONTH=#SAL_MONTH:VARCHAR#,SAL_VALID_DAYS=#SAL_VALID_DAYS:DECIMAL#,
		SAL_WORK_DAYS=#SAL_WORK_DAYS:DECIMAL#,SAL_OVERTIME=#SAL_OVERTIME:DECIMAL#,SAL_LEAVE=#SAL_LEAVE:DECIMAL#,
		SAL_BASIC=#SAL_BASIC:DECIMAL#,SAL_PERFORMANCE=#SAL_PERFORMANCE:DECIMAL#,SAL_SUBSIDY=#SAL_SUBSIDY:DECIMAL#,
		SAL_BONUS=#SAL_BONUS:DECIMAL#,SAL_ACTUAL=#SAL_ACTUAL:DECIMAL#,SAL_TOTAL=#SAL_TOTAL:DECIMAL#,SAL_STATE=#SAL_STATE:VARCHAR#,
		SAL_INSURE=#SAL_INSURE:DECIMAL#,SAL_TAX=#SAL_TAX:DECIMAL#,SAL_REMARKS=#SAL_REMARKS:VARCHAR#,
		SAL_OFFSET_VACATION=#SAL_OFFSET_VACATION:DECIMAL#,SAL_YEAR_LEAVE=#SAL_YEAR_LEAVE:DECIMAL#,
		SAL_SHOULD=#SAL_SHOULD:DECIMAL#,SAL_HOUSING_FUND=#SAL_HOUSING_FUND:DECIMAL#
		where SAL_ID=#SAL_ID#
	</update>
	<update id="validupdateRecord" parameterClass="com.agileai.domain.DataParam">
		update hr_salary
		set
		SAL_USER=#SAL_USER:VARCHAR#,SAL_YEAR=#SAL_YEAR:VARCHAR#,SAL_MONTH=#SAL_MONTH:VARCHAR#,
		SAL_VALID_DAYS=#SAL_VALID_DAYS:DECIMAL#,SAL_WORK_DAYS=#SAL_WORK_DAYS:DECIMAL#,
		SAL_OVERTIME=#SAL_OVERTIME:DECIMAL#,SAL_LEAVE=#SAL_LEAVE:DECIMAL#,SAL_BASIC=#SAL_BASIC:DECIMAL#,
		SAL_PERFORMANCE=#SAL_PERFORMANCE:DECIMAL#,SAL_SUBSIDY=#SAL_SUBSIDY:DECIMAL#,
		SAL_BONUS=#SAL_BONUS:DECIMAL#,SAL_ACTUAL=#SAL_ACTUAL:DECIMAL#,SAL_TOTAL=#SAL_TOTAL:DECIMAL#,
		SAL_STATE=#SAL_STATE:VARCHAR#,SAL_INSURE=#SAL_INSURE:DECIMAL#,SAL_TAX=#SAL_TAX:DECIMAL#,
		SAL_OFFSET_VACATION=#SAL_OFFSET_VACATION:DECIMAL#,SAL_YEAR_LEAVE=#SAL_YEAR_LEAVE:DECIMAL#,
		SAL_SHOULD=#SAL_SHOULD:DECIMAL#,SAL_HOUSING_FUND=#SAL_HOUSING_FUND:DECIMAL#
		where SAL_YEAR=#SAL_YEAR:VARCHAR# and SAL_MONTH=#SAL_MONTH:VARCHAR#
		and SAL_USER=#SAL_USER:VARCHAR#
	</update>
	<update id="approveRecord" parameterClass="com.agileai.domain.DataParam">
		update hr_salary
		set
		SAL_USER=#SAL_USER:VARCHAR#,SAL_YEAR=#SAL_YEAR:VARCHAR#,SAL_MONTH=#SAL_MONTH:VARCHAR#,
		SAL_VALID_DAYS=#SAL_VALID_DAYS:DECIMAL#,SAL_WORK_DAYS=#SAL_WORK_DAYS:DECIMAL#,SAL_OVERTIME=#SAL_OVERTIME:DECIMAL#,
		SAL_LEAVE=#SAL_LEAVE:DECIMAL#,SAL_BASIC=#SAL_BASIC:DECIMAL#,SAL_PERFORMANCE=#SAL_PERFORMANCE:DECIMAL#,
		SAL_SUBSIDY=#SAL_SUBSIDY:DECIMAL#,SAL_BONUS=#SAL_BONUS:DECIMAL#,SAL_TOTAL=#SAL_TOTAL:DECIMAL#,
		SAL_STATE=#SAL_STATE:VARCHAR#,SAL_INSURE=#SAL_INSURE:DECIMAL#,SAL_TAX=#SAL_TAX:DECIMAL#,SAL_REMARKS=#SAL_REMARKS:VARCHAR#,
		SAL_OFFSET_VACATION=#SAL_OFFSET_VACATION:DECIMAL#,SAL_YEAR_LEAVE=#SAL_YEAR_LEAVE:DECIMAL#,
		SAL_SHOULD=#SAL_SHOULD:DECIMAL#,SAL_HOUSING_FUND=#SAL_HOUSING_FUND:DECIMAL#
		where SAL_ID=#SAL_ID#
	</update>
	<update id="revokeApprovalRecord" parameterClass="com.agileai.domain.DataParam">
		update
		hr_salary
		set SAL_STATE=#SAL_STATE:VARCHAR#
		where SAL_ID=#SAL_ID#
	</update>
	<delete id="deleteRecord" parameterClass="com.agileai.domain.DataParam">
		delete from hr_salary
		where SAL_ID=#SAL_ID#
	</delete>
	<insert id="insertValidDaysRecord" parameterClass="com.agileai.domain.DataParam">
		insert into
		hr_valid (VALID_YEAR,VALID_MONTH,VALID_DAYS) values
		(#VALID_YEAR:VARCHAR#,#VALID_MONTH:VARCHAR#,#VALID_DAYS:DECIMAL#)
	</insert>
	<update id="updateValidDaysRecord" parameterClass="com.agileai.domain.DataParam">
		update
		hr_valid
		set
		VALID_YEAR=#VALID_YEAR:VARCHAR#,VALID_MONTH=#VALID_MONTH:VARCHAR#,VALID_DAYS=#VALID_DAYS:DECIMAL#
		where VALID_YEAR=#VALID_YEAR# and VALID_MONTH=#VALID_MONTH#
	</update>
	<select id="existsDataRecords" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select
		a.SAL_ID,a.SAL_USER,c.EMP_NAME as
		SAL_NAME,a.SAL_YEAR,a.SAL_MONTH,a.SAL_VALID_DAYS,a.SAL_WORK_DAYS,a.SAL_OVERTIME,a.SAL_LEAVE,a.SAL_BASIC,
		a.SAL_PERFORMANCE,a.SAL_SUBSIDY,a.SAL_BONUS,a.SAL_TOTAL,a.SAL_STATE,a.SAL_INSURE,a.SAL_TAX,c.EMP_PARTICIPATE_SALARY
		from hr_salary a LEFT JOIN security_user b ON a.SAL_USER=b.USER_ID
		LEFT
		JOIN hr_employee c ON b.USER_CODE = c.EMP_CODE
		where 1=1
		<isNotEmpty prepend=" " property="year">
			and SAL_YEAR = #year#
		</isNotEmpty>
		<isNotEmpty prepend=" " property="month">
			and SAL_MONTH = #month#
		</isNotEmpty>
		order by SAL_YEAR,SAL_MONTH,SAL_USER
	</select>
	<select id="workDayRecords" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		SELECT USER_ID,COUNT(ATD_DATE) as WORK_DAYS
		FROM hr_attendance
		WHERE
		1=1
		<isNotEmpty prepend=" " property="userCode">
			and USER_ID = #userCode#
		</isNotEmpty>
		<isNotEmpty prepend=" " property="yearMonth">
			and LEFT(ATD_DATE,7) =
			#yearMonth#
		</isNotEmpty>
		GROUP BY USER_ID
	</select>
	<select id="leaveDayRecords" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		SELECT USER_ID,SUM(LEA_DAYS) as LEAVE_DAYS
		FROM hr_leave
		WHERE 1=1
		<isNotEmpty prepend=" " property="userCode">
			and USER_ID = #userCode#
		</isNotEmpty>
		<isNotEmpty prepend=" " property="yearMonth">
			and LEFT(LEA_SDATE,7) =
			#yearMonth#
		</isNotEmpty>
		GROUP BY USER_ID
	</select>
	<select id="overTimeDayRecords" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		SELECT USER_ID,SUM(WOT_TIME) as WOT_DAYS
		FROM hr_work_overtime
		WHERE
		1=1
		<isNotEmpty prepend=" " property="userCode">
			and USER_ID = #userCode#
		</isNotEmpty>
		<isNotEmpty prepend=" " property="yearMonth">
			and LEFT(WOT_DATE,7) =
			#yearMonth#
		</isNotEmpty>
		GROUP BY USER_ID
	</select>
	<select id="totalLeaveOfYearRecords" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		SELECT USER_ID,SUM(LEA_DAYS) as LEAVE_DAYS
		FROM hr_leave
		WHERE 1=1
		and LEA_SDATE BETWEEN #beginYear# AND #currentDate#
		<isNotEmpty prepend=" " property="userCode">
			and USER_ID = #userCode#
		</isNotEmpty>
		GROUP BY USER_ID
	</select>
	<select id="totalOverTimeOfYearRecords" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		SELECT USER_ID,SUM(WOT_TIME) as WOT_DAYS
		FROM hr_work_overtime
		WHERE
		1=1
		and WOT_DATE BETWEEN #beginYear# AND #currentDate#
		<isNotEmpty prepend=" " property="userCode">
			and USER_ID = #userCode#
		</isNotEmpty>
		GROUP BY USER_ID
	</select>		
	<update id="updateBonusRecord" parameterClass="com.agileai.domain.DataParam">
		update
		hr_salary
		set SAL_TOTAL=#SAL_TOTAL:DECIMAL#
		where
		SAL_ID=#SAL_ID#
	</update>
	<select id="findSalaryList" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select SAL_ID,SAL_YEAR,SAL_MONTH,SAL_BASIC,SAL_PERFORMANCE,SAL_SUBSIDY,SAL_BONUS,SAL_INSURE,SAL_REMARKS
		from hr_salary a left join security_user b on a.SAL_USER = b.USER_ID
		where 1=1
		and a.SAL_USER = #userId#
		order by SAL_YEAR desc,SAL_MONTH desc
		limit 6
	</select>
	<select id="getLastSalayInfo" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select CONCAT(SAL_YEAR,'-',SAL_MONTH)  as SAL_YEAR_MONTH,
		SAL_BASIC,SAL_PERFORMANCE,SAL_SUBSIDY,SAL_BONUS,SAL_INSURE,SAL_TOTAL,SAL_TAX
		from hr_salary
		where 1=1
		and SAL_USER = #userId#
		order by SAL_YEAR desc ,SAL_MONTH desc
		limit 1
	</select>
	<select id="getLastOffsetVacationInfo" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select SAL_OFFSET_VACATION
		from hr_salary
		where 1=1
		and SAL_YEAR = #lastYear#
		and SAL_MONTH = #lastMonth#
		and SAL_USER = #userCode#
	</select>
	<select id="getSalYearLeaveInfo" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select sum(LEA_DAYS) as SAL_YEAR_LEAVE
		from hr_leave
		where 1=1
		and USER_ID = #userCode#
		and LEA_DATE &gt; #beginTime# 
		and LEA_DATE &lt; #endTime#
	</select>
	<select id="getUserAnnualLeaveDays" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select EMP_ANNUAL_LEAVE_DAYS
		from hr_employee a LEFT JOIN security_user c ON a.EMP_CODE = c.USER_CODE
		where 1=1
		and c.USER_ID = #userId#
	</select>	
	<select id="getMonthlyInfo" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select a.SAL_ID,a.SAL_USER,a.SAL_YEAR,a.SAL_MONTH,a.SAL_VALID_DAYS,a.SAL_WORK_DAYS,a.SAL_OVERTIME,a.SAL_LEAVE,a.SAL_BASIC,
		a.SAL_PERFORMANCE,a.SAL_SUBSIDY,a.SAL_BONUS,a.SAL_TOTAL,a.SAL_STATE,a.SAL_INSURE,a.SAL_TAX
		from hr_salary a
		where 1=1
		and SAL_YEAR = #year#
		and SAL_MONTH = #month#
		and SAL_USER = #userId#
	</select>
	<update id="updateOffsetVacationrecord" parameterClass="com.agileai.domain.DataParam">
		update
		hr_salary
		set SAL_OFFSET_VACATION=#SAL_OFFSET_VACATION:DECIMAL#,SAL_OVERTIME=#SAL_OVERTIME:DECIMAL#,SAL_LEAVE=#SAL_LEAVE:DECIMAL#
		where
		SAL_ID=#SAL_ID#
	</update>
	<select id="getPunishmentRecord" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select SUM(BP_MONEY) as MONEY
		from hr_bonus_penalty
		where 1=1
		and USER_ID = #USER_ID#
		and BP_TYPE = 'PUNISHMENT'
		and date_format(BP_DATE,'%Y-%m') = #yearMonth#
	</select>
	<select id="getRewardtRecord" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select SUM(BP_MONEY) as MONEY
		from hr_bonus_penalty
		where 1=1
		and USER_ID = #USER_ID#
		and BP_TYPE = 'REWARD'
		and date_format(BP_DATE,'%Y-%m') = #yearMonth#
	</select>
	<select id="getBonusPenaltyRecord" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		SELECT BP_ID,USER_ID,BP_DATE,BP_TYPE,BP_MONEY
		FROM hr_bonus_penalty
		where 1=1
		and USER_ID = #USER_ID#
		and BP_DATE = #BP_DATE#
		and BP_TYPE = #BP_TYPE#
	</select>	
  <insert id="insertBonusPenaltyRecord" parameterClass="com.agileai.domain.DataParam">
    insert into hr_bonus_penalty (BP_ID,USER_ID,BP_DATE,BP_TYPE,BP_MONEY) values (#BP_ID:CHAR#,#USER_ID:CHAR#,#BP_DATE:DATE#,#BP_TYPE:VARCHAR#,#BP_MONEY:DECIMAL#)
  </insert>
  <update id="updateBonusPenaltyRecord" parameterClass="com.agileai.domain.DataParam">
    update hr_bonus_penalty
set USER_ID=#USER_ID:CHAR#,BP_DATE=#BP_DATE:DATE#,BP_TYPE=#BP_TYPE:VARCHAR#,BP_MONEY=#BP_MONEY:DECIMAL#
where USER_ID = #USER_ID# and BP_DATE = #BP_DATE# and BP_TYPE = #BP_TYPE#
  </update>
  <delete id="deleteBonusPenaltRecord" parameterClass="com.agileai.domain.DataParam">
    delete from hr_bonus_penalty where BP_ID=#BP_ID#
  </delete>  
	<select id="getFulltimeAwardRecord" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select TYPE_NAME
		from sys_codetype
		where TYPE_ID='FULLTIME_AWARD'
	</select>    					
</sqlMap>