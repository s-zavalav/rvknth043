<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="HrAttendance">
	<select id="findRecords" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select a.ATD_ID,a.ATD_DATE,a.USER_ID,b.USER_NAME as
		USER_ID_NAME,a.ATD_IN_TIME,a.ATD_OUT_TIME,a.ATD_IN_PLACE,a.ATD_OUT_PLACE,
		a.ATD_IN_COORDINATE,a.ATD_IN_HOUSE,a.ATD_OUT_COORDINATE,a.ATD_OUT_HOUSE
		from hr_attendance a left join security_user b on a.USER_ID =
		b.USER_ID
		where 1=1
		<isNotEmpty prepend=" " property="adtDate">
			and ATD_DATE=#adtDate#
		</isNotEmpty>
		<isNotEmpty prepend=" " property="expression">
			$expression$ order by ATD_OUT_TIME
		</isNotEmpty>		
		<isEmpty  prepend=" " property="expression">
		order by ATD_IN_TIME
		</isEmpty>
	</select>
	<select id="getRecord" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select a.ATD_ID,a.ATD_DATE,a.USER_ID,b.USER_NAME as
		USER_ID_NAME,a.ATD_IN_TIME,a.ATD_OUT_TIME,a.ATD_IN_PLACE,a.ATD_OUT_PLACE,
		a.ATD_IN_COORDINATE,a.ATD_IN_HOUSE,a.ATD_OUT_COORDINATE,a.ATD_OUT_HOUSE
		from hr_attendance a left join security_user b on a.USER_ID =
		b.USER_ID
		where 1=1
		<isNotEmpty prepend="and " property="currentUser">
			b.USER_ID=#currentUser#
		</isNotEmpty>	
		<isNotEmpty prepend="and " property="currentDate">
			ATD_DATE=#currentDate#
		</isNotEmpty>
	</select>
	<insert id="insertRecord" parameterClass="com.agileai.domain.DataParam">
		insert into hr_attendance
		(ATD_ID,ATD_DATE,USER_ID,ATD_IN_TIME,ATD_IN_PLACE,ATD_IN_HOUSE,ATD_IN_COORDINATE)values
		(#ATD_ID:CHAR#,#ATD_DATE:DATETIME#,#USER_ID:CHAR#,#ATD_IN_TIME:DATETIME#,#ATD_IN_PLACE:VARCHAR#,#ATD_IN_HOUSE:VARCHAR#,#ATD_IN_COORDINATE:VARCHAR#)
	</insert>
	<update id="updateRecord" parameterClass="com.agileai.domain.DataParam">
		update hr_attendance
		set
		ATD_OUT_TIME=#ATD_OUT_TIME:DATETIME#,ATD_OUT_PLACE=#ATD_OUT_PLACE:VARCHAR#,ATD_OUT_COORDINATE=#ATD_OUT_COORDINATE:VARCHAR#,ATD_OUT_HOUSE=#ATD_OUT_HOUSE:VARCHAR#
		where ATD_ID=#ATD_ID#
	</update>
	<select id="attendanceStatisticsRecords" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select USER_NAME,COUNT(ATD_IN_TIME) as IN_NUM,COUNT(ATD_OUT_TIME) as OUT_NUM 
		from hr_attendance a left join security_user b on a.USER_ID = b.USER_ID
		where 1=1
        and ATD_DATE &gt;= #sdate#
		and ATD_DATE &lt;= #edate#
		group by a.USER_ID
	</select>
	<insert id="createLocationRecord" parameterClass="com.agileai.domain.DataParam">
		insert into hr_location
		(LOCAT_ID,USER_ID,LOCAT_TIME,LOCAT_PLACE,LOCAT_HOUSE) values
		(#LOCAT_ID:CHAR#,#USER_ID:CHAR#,#LOCAT_TIME:DATETIME#,#LOCAT_PLACE:VARCHAR#,#LOCAT_HOUSE:VARCHAR#)
	</insert>	
	
	<select id="findUserInfos" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		  SELECT USER_ID,USER_NAME,USER_CODE
		from security_user
		where 1 = 1
		and USER_CODE in ($userCodes$)
		order by USER_CODE 
	</select>
	
	<select id="findSignLocationInfos" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		  SELECT LOCAT_ID,USER_ID,LOCAT_TIME,LOCAT_PLACE
		FROM hr_location
		where 1 = 1
		and USER_ID = #userId#
		ORDER BY LOCAT_TIME Desc limit 20
	</select>
	<select id="getAttendanceStatInfoRecords" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select DISTINCT USER_NAME,USER_CODE,ifnull(c.nums, 0) as lastNums,ifnull(e.nums, 0) as leaveNums,ifnull(g.nums, 0) as overWorkNums from security_user a 
		left JOIN 
		(select USER_ID,count(b.ATD_ID) as nums from hr_attendance b
		where 1=1
		and b.ATD_DATE &gt;= #startDate# and b.ATD_DATE &lt;= #endDate#
		and date_format(b.ATD_IN_TIME , '%H:%i') > date_format(now(),'09:00')
		group by USER_ID
		)c on a.USER_ID = c.USER_ID
		LEFT JOIN
		(select USER_ID,SUM(d.LEA_DAYS) as nums from hr_leave d
		where 1=1
		and d.LEA_DATE &gt;= #startDate# and d.LEA_DATE &lt;= #endDate#
		and d.STATE = 'approved'
		group by USER_ID
		)e on a.USER_ID = e.USER_ID
		LEFT JOIN
		(select USER_ID,SUM(f.WOT_TIME) as nums from hr_work_overtime f
		where 1=1
		and f.WOT_DATE &gt;= #startDate# and f.WOT_DATE &lt;= #endDate#
		and f.STATE = 'approved'
		group by USER_ID
		)g on a.USER_ID = g.USER_ID
		where a.user_code != 'admin' and a.USER_ID not in (select s.USER_ID from security_user_role_rel s LEFT JOIN security_role t on s.role_id = t.role_id where t.role_code='Leader')
	</select>		
	
	<select id="getAttendContentDataRecords" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select a.ATD_ID,a.ATD_DATE,a.USER_ID,b.USER_NAME as
		USER_ID_NAME,a.ATD_IN_TIME,a.ATD_OUT_TIME,a.ATD_IN_PLACE,a.ATD_OUT_PLACE
		from hr_attendance a left join security_user b on a.USER_ID = b.USER_ID
		where 1=1
		and b.USER_CODE=#code#
		and a.ATD_DATE &gt;= #startDate# and a.ATD_DATE &lt;= #endDate#
		and date_format(a.ATD_IN_TIME , '%H:%i') > date_format(now(),'09:00')
		order by a.ATD_DATE
	</select>
	<select id="getLeaveContentDataRecords" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select a.LEA_ID,a.USER_ID,b.USER_NAME as USER_ID_NAME,a.LEA_DATE,a.LEA_TYPE,d.CODE_NAME as LEA_TYPE_TEXT,a.LEA_CAUSE,a.LEA_APPOVER,c.USER_NAME as LEA_APPOVER_NAME,a.LEA_APP_TIME,a.LEA_APP_OPINION,a.APP_RESULT,a.LEA_SDATE,a.LEA_EDATE,a.LEA_DAYS,STATE
		from hr_leave a left join security_user b on a.USER_ID = b.USER_ID left join security_user c on a.LEA_APPOVER = c.USER_ID
		left join sys_codelist d on a.LEA_TYPE = d.CODE_ID 
		where 1=1 
		and d.TYPE_ID = 'LEA_TYPE'
		and b.USER_CODE=#code#
		and a.LEA_DATE &gt;= #startDate# and a.LEA_DATE &lt;= #endDate#
		and a.STATE = 'approved'
		order by a.LEA_DATE
	</select>
	<select id="getOverworkContentDataRecords" parameterClass="com.agileai.domain.DataParam"
		resultClass="com.agileai.domain.DataRow">
		select a.WOT_ID,a.USER_ID,b.USER_NAME as USER_ID_NAME,a.WOT_DATE,a.WOT_PARTICIPANT,a.WOT_PLACE,a.WOT_DESC,a.WOT_TIME,a.WOT_APPROVER,c.USER_NAME as WOT_APPROVER_NAME,a.WOT_APP_TIME,a.APP_RESULT,a.WOT_APP_OPINION,a.WOT_OVERTIME_DATE,a.STATE
		from hr_work_overtime a left join security_user b on a.USER_ID = b.USER_ID left join security_user c on a.WOT_APPROVER=c.USER_ID 
		where 1=1 
		and a.STATE = 'approved'
		order by a.WOT_DATE
	</select>
	<select id="findActiveUserId" parameterClass="com.agileai.domain.DataParam" resultClass="com.agileai.domain.DataRow">
	 SELECT USER_ID,USER_NAME,USER_CODE
	from security_user 
	where 1 = 1
	 and USER_CODE = #userCode#
	</select>
</sqlMap>